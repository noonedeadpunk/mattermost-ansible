---

heat_template_version: 2018-08-31
description: Template to create instances inside ResourceGroup


parameters:
  key_name:
    type: string
    label: Key Name
    description: Name of key-pair to be used for compute instance
    constraints:
      - custom_constraint: nova.keypair
  image_id:
    type: string
    label: Image ID
    description: Image to be used for compute instance
    constraints:
      - custom_constraint: glance.image
  instance_type:
    type: string
    label: Instance Type
    description: Type of instance (flavor) to be used
    constraints:
      - custom_constraint: nova.flavor
  network:
    type: string
    description: Network used by the server
    constraints:
      - custom_constraint: neutron.network
  server_group:
    type: string
    description: Security group used by server
  security_group:
    type: string
    description: Security group used by server
    constraints:
      - custom_constraint: neutron.security_group
  pool:
    type: string
    description: Octavia pool
    constraints:
      - custom_constraint: octavia.pool
  pool_ssl:
    type: string
    description: Octavia pool
    constraints:
      - custom_constraint: octavia.pool
  pool_galera:
    type: string
    description: Octavia pool
    constraints:
      - custom_constraint: octavia.pool
  subnet:
    type: string
    description: Neutron network subnet
    constraints:
      - custom_constraint: neutron.subnet
  public_net:
    type: string
    description: >
      ID or name of public network for which floating IP addresses will be allocated
    constraints:
      - custom_constraint: neutron.network

resources:

  server_port:
    type: OS::Neutron::Port
    properties:
      network_id: { get_param: network }
      security_groups: [{ get_param: security_group }]

  server:
    type: OS::Nova::Server
    properties:
      key_name: { get_param: key_name }
      image: { get_param: image_id }
      flavor: { get_param: instance_type }
      networks: [{ port: { get_resource: server_port }}]
      scheduler_hints:
        group:  { get_param: server_group }

  floating_ip:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network: { get_param: public_net }
      port_id: { get_resource: server_port }

  member:
    type: OS::Octavia::PoolMember
    properties:
      pool: {get_param: pool}
      address: {get_attr: [server, first_address]}
      protocol_port: 80
      subnet: {get_param: subnet}

  member_ssl:
    type: OS::Octavia::PoolMember
    properties:
      pool: {get_param: pool_ssl}
      address: {get_attr: [server, first_address]}
      protocol_port: 443
      subnet: {get_param: subnet}

  member_galera:
    type: OS::Octavia::PoolMember
    properties:
      pool: {get_param: pool_galera}
      address: {get_attr: [server, first_address]}
      protocol_port: 3306
      subnet: {get_param: subnet}

outputs:
  server_ip:
    description: IP Address of the load-balanced server.
    value: { get_attr: [floating_ip, floating_ip_address] }
  lb_member:
    description: LB member details.
    value: { get_attr: [member, show] }
